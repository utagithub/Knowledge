<?php
Supervisor是用Python开发的一个client/server服务，是Linux/Unix系统下的一个进程管理工具，不支持Windows系统。
它可以很方便的监听、启动、停止、重启一个或多个进程。用Supervisor管理的进程，当一个进程意外被杀死，
supervisort监听到进程死后，会自动将它重新拉起，很方便的做到进程自动恢复的功能，不再需要自己写shell脚本来控制

参考链接
https://www.jianshu.com/p/8a6071b53c44


supervisord
负责管理进程的server端，配置文件是/etc/supervisor/supervisord.conf

先启动服务端：
supervisord -c /etc/supervisord.conf
systemctl start supervisord




supervisorctl
client端的命令行工具，管理子进程，配置文件在/etc/supervisor/supervisord.d/目录下

客户端查看运行的应用程序进程：
supervisorctl status


监控应用程序的配置文件：->例
[program:horizon]
process_name=%(program_name)s
command=/usr/local/php/bin/php /data/wwwroot/laravel_ws/artisan horizon
autostart=true
autorestart=true
user=root
redirect_stderr=true
stdout_logfile=/home/log/horizon.log


后台启动并监控队列处理器服务状态：
[program:laravel_queue]
process_name=%(program_name)s
	会消费默认队列的数据
command=/usr/local/php/bin/php /data/wwwroot/laravel_ws/artisan queue:work
	指定队列连接,消费连接中默认队列default和自定义队列mrwang中的任务数据,先执行default后mrwang
command=/usr/local/php/bin/php /data/wwwroot/laravel_ws/artisan queue:work  redis --queue=default,mrwang
	默认的队列连接,消费连接中默认队列default和自定义队列mrwang中的任务数据,先执行default后mrwang
command=/usr/local/php/bin/php /data/wwwroot/laravel_ws/artisan queue:work  --queue=default,mrwang
autostart=true
autorestart=true
user=root
redirect_stderr=true
stdout_logfile=/home/supervisor_log/laravel_ws_queue.log


后台启动并监控laravel-echo-server状态：
这里注意redis用户名密码问题，如果redis设置了密码，需要在laravel-echo-server.json中进行配置：
[program:laravel_ws_laravel_echo_server]
process_name=%(program_name)s
command=/usr/local/nodejs/bin/laravel-echo-server start --dir=/data/wwwroot/laravel_ws
autostart=true
autorestart=true
user=root
redirect_stderr=true
stdout_logfile=/home/supervisor_log/laravel_ws_laravel_echo_server.log