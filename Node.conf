
<?php
linux安装nodejs
1.tar xvf node-v6.9.5-linux-x64.tar.xz
2.mv node-v6.9.5-linux-x64/ nodejs
3.ln -s /usr/local/nodejs/bin/node /usr/local/bin
4.ln -s /usr/local/nodejs/bin/npm  /usr/local/bin


Google浏览器安装vuejs devtools 参考网址:
https://www.cnblogs.com/alice-fee/p/8038367.html




npm本地安装:

本地安装模块包的一个特点就是:在使用安装好的模块包时，需要通过require('<package-name>')来引入到项目中使用；

本地安装时还需要考虑的一个问题就是安装好模块包后，其信息是否要写入到项目package.json中？如果写，写到哪？因此，本地安装衍生出三种命令，分别为:

npm install <package-name>
安装模块包，模块包的信息不会写入到项目的package.json文件中；

npm install <package-name> --save
安装模块包，并且将模块包的信息写入到项目package.json中的dependencies对象中；

npm install <package-name> --save-dev
安装模块包，并且将模块包的信息写入到项目package.json中的devDependencies对象中；

2、删除模块包
删除与安装相对应，也分为全局删除和本地删除

全局删除:
npm uninstall <package-name> -g

本地删除:
对应的，本地删除也需要考虑是否再删除模块包的同时删除项目package.json中对应的信息，因此，利用npm本地删除模块包的命令也是三种，分别为:
npm uninstall <package-name>
删除模块包，对应模块包的信息不会从项目package.json文件中删除；

npm uninstall <package-name> --save
删除模块包，并且将对应的模块包信息从项目package.json的dependencies对象中删除；

npm uninstall <package-name> --save-dev
删除模块包，并且将对应的模块包信息从项目package.json的devDependencies对象中删除




如何查看npm配置？
npm config list //查看基本配置 
npm config list -l //查看所有配置

npm本地安装与全局安装有什么区别？
npm install 功能包名 // 本地安装，则是将模块下载到当前命令行所在目录。 
npm install -g 功能包名//全局安装，模块将被下载安装到【全局目录】中；

npm如何获取全局安装的默认目录？
npm config get prefix
npm root -g (查看全局安装目录)

npm如何设置全局安装的默认目录？
npm config set prefix “directory”

查看全局已安装包
npm ls -g
加上层级控制显示深度：--depth 0
npm ls -g --depth 0

查看当前项目已安装包,必须在目录下(有package.json)
npm ls

清除本地缓存
npm cache clean 



nodeJS的资源仓库在国内使用过程中，偶尔会遇到各种资源问题，通常设置为淘宝的镜像，网上很多说法是安装淘宝镜像，即 
$ npm install -g cnpm --registry=https://registry.npm.taobao.org 
然后再用到npm install的时候，使用cnpm install进行安装node_modules。 
但是该种方式，在集成到IED的时候,如果想在IDEA中，直接使用node的命令，进行install，就行不通了。这个时候，可以使用第二种方式:
npm config set registry "https://registry.npm.taobao.org"
更改npm的config的registry 为淘宝镜像，然后再使用npm的时候，就是从淘宝镜像拉取数据了


node安装指定版本的依赖:
	npm install jquery@3.0.1 -g 


PS:新启一个VUE项目
1.基础环境需要安装-nodeJS
2.全局安装VUE:npm install -g vue 
3.全局安装webpack:npm install -g webpack   --- webpack是编译处理js文件的
4.Vue.js 提供一个官方命令行工具，可用于快速搭建大型单页应用:npm install -g vue-cli
	
	5.vue init webpack <项目名称>  初始化项目-默认一路回车即可
	6.cd <项目名称>
	7.npm install css-loader style-loader   （npm install css-loader style-loader --save-dev  该命令会将安装的扩展包名添加到packge.json）
	8.npm run dev 编译静态资源-（如果没有虚拟主机，会有一个默认的站点，如果使用VUE框架自带虚拟服务，打包完成后不要终止命令行，否则无法使用默认站点访问,这样就打包成功了。然后我的项目根目录就会多一个dist文件夹，里面包含static文件夹（存放img、css、js等文件）和index.html。）
	9.npm run build 打包应用程  （前后端分离中，将打包的程序单独配置站点）

Webpack 本身只能处理 JavaScript 模块，如果要处理其他类型的文件，就需要使用 loader 进行转换。
所以如果我们需要在应用中添加 css 文件，就需要使用到 css-loader 和 style-loader，
他们做两件不同的事情，css-loader 会遍历 CSS 文件，然后找到 url() 表达式然后处理他们，
style-loader 会把原来的 CSS 代码插入页面中的一个 style 标签中。





yarn 一个软件包管理工具

npm install -g yarn

npm install === yarn (install安装是默认行为)
npm install taco --save === yarn add taco (taco包立即被保存到 package.json 中)
npm uninstall taco --save === yarn remove taco
npm install taco --save-dev === yarn add taco --dev
npm update --save === yarn upgrade
————————————————

1.安装yum install -y yarn 
2.在windows下执行yarn命令的时候如果报错:An unexpected error occurred: "EPROTO: protocol error, symlink
改为执行:yarn install --no-bin-links



mac安装npm报错参考
https://www.jianshu.com/p/3b90e675284f
