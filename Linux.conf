<?php
设置主机名:
hostnamectl set-hostname 主机名
查看当前系统命令别名:alais
查看网卡lspci |grep -i ethernet

查看进程使用内存
cat /proc/[进程pid]/status|grep VmRSS

mac:
top -pid [进程pid]

查看配置文件未注释内容
grep -Ev '#|^$' /etc/filebeat/filebeat.yml
grep -Ev ';|^$' php.ini

1 查看CPU
top 的全屏对话模式可分为3部分:系统信息栏、命令输入栏、进程列表栏。

users :表示现在有几个用户链接到系统
“450 total”为当前系统进程总数；
“1   running”为当前运行中的进程数；
“448 sleeping”为当前处于等待状态中的进程数；
“1   stoped”为被停止的系统进程数；
“0   zombie”为被复原的进程数；

top命令可以看到总体的系统运行状态和cpu的使用率 。
%us:表示用户空间程序的cpu使用率(没有通过nice调度)
%sy:表示系统空间的cpu使用率，主要是内核程序。
%ni:表示用户空间且通过nice调度过的程序的cpu使用率。
%id:空闲cpu
%wa:cpu运行时在等待io的时间
%hi:cpu处理硬中断的数量
%si:cpu处理软中断的数量
%st:被虚拟机偷走的cpu



top 运行中可以通过 top 的内部命令对进程的显示方式进行控制。内部命令如下表:
s – 改变画面更新频率
l – 关闭或开启第一部分第一行 top 信息的表示
t – 关闭或开启第一部分第二行 Tasks 和第三行 Cpus 信息的表示
m – 关闭或开启第一部分第四行 Mem 和 第五行 Swap 信息的表示
N – 以 PID 的大小的顺序排列表示进程列表
P – 以 CPU 占用率大小的顺序排列进程列表
M – 以内存占用率大小的顺序排列进程列表
h – 显示帮助
n – 设置在进程列表所显示进程的数量
q – 退出 top
s – 改变画面更新周期

1.1 查看CPU个数
# cat /proc/cpuinfo | grep "physical id" | uniq | wc -l

2 **uniq命令:删除重复行;wc –l命令:统计行数**

1.2 查看CPU核数
# cat /proc/cpuinfo | grep "cpu cores" | uniq
cpu cores : 4

1.3 查看CPU型号
# cat /proc/cpuinfo | grep 'model name' |uniq
model name : Intel(R) Xeon(R) CPU E5630 @ 2.53GHz

总结:该服务器有2个4核CPU，型号Intel(R) Xeon(R) CPU E5630 @ 2.53GHz

2 查看内存

2.1 查看内存总数
#cat /proc/meminfo | grep MemTotal
MemTotal: 32941268 kB //内存32G
或者:
free -h 　查看内存大小
total:表示 总计物理内存的大小。
used:表示 已使用多少。
free:表示 可用内存多少。
Shared:表示多个进程共享的内存总额。
Buffers/cached:表示 磁盘缓存的大小。
-----------------------------------------------------------------------------------------
用scp命令上传和下载文件(ubuntu执行该命令时需要在命令前加sudo授权)
scp root@101.200.34.217:1.txt 2.txt (把服务器的/root目录下的1.txt下载到本地当前目录，并且重命名为2.txt)
scp 2.txt root@101.200.34.217:3.txt (把本地当前目录中的2.txt文件上传到服务器的root目录下，并且命名为3.txt)

scp -r 的话表示上传或者下载文件夹
scp -表示加上端口信息(P为大写)
	本机文件       远程服务器信息:用户名@服务器IP:要拷贝到的目录
scp /home/abc.txt root@101.200.34.217:/home/

scp root@101.200.34.217:/home/software/oneinstack-full.tar.gz /home/oneinstack-full.tar.gz
scp root@101.200.34.217:/home/software/ghostscript-9.25.tar.gz /home/ghostscript-9.25.tar.gz
scp root@101.200.34.217:/home/software/jodconverter-2.2.2.zip /home/jodconverter-2.2.2.zip
scp root@101.200.34.217:/home/software/server-jre-8u202-linux-x64.tar.gz /home/server-jre-8u202-linux-x64.tar.gz
scp root@101.200.34.217:/home/software/Apache_OpenOffice_4.1.5_Linux_x86-64_install-rpm_zh-CN.tar.gz /home/Apache_OpenOffice_4.1.5_Linux_x86-64_install-rpm_zh-CN.tar.gz
-----------------------------------------------------------------------------------------
l是链接文件，相当于windows的快捷方式；

b是块设备，硬盘就是一个例子；

c是字符设备文件，鼠标，键盘算是；

d是目录文件，相当于windows的文件夹。
-----------------------------------------------------------------------------------------
Linux7种运行模式
1)在超级权限下(#)vim /etc/inittab

2)文件内容模式的理解:

　　0 代表:关机模式(此模式 linux是关机状态)

　　1 代表:单用户模式(例如root的密码忘记了，可以在该模式下完成密码的找回)

　　2 没有NFS网络共享的多用户模式(NFS:network file system)

　　3 代表的是命令行模式(一般生产环境都是使用的该模式，该模式下没有桌面程序)

　　4 暂时没有被使用(留着以后可能使用)

　　5 代表的是桌面模式(该模式是用户常见桌面操作 常见的桌面程序有 gnome kde)

　　6 代表重启

3) 模式切换命令　

　　init +数字(0-6)

进入单用户模式参考:https://www.cnblogs.com/jsjrj01/p/10301603.html

centos7以后是这样的，7以前就是别的版本了
1.systemctl get-default命令获取当前模式
2.systemctl set-default graphical.target 修改启动模式(修改为图形界面，要是修改为命令行就systemctl set-default multi-user.target)
3.reboot重新启动就可以了
-----------------------------------------------------------------------------------------
查看CPU序列号
dmidecode -t 4 | grep ID >/home/cpuinfo.txt
man 命令    查看命令的参数
-----------------------------------------------------------------------------------------
删除某个文件除外的其他所有文件
比如要删除除了abc.txt文件以外的所有目录及文件
1:shopt -s extglob
2:rm -fr !(abc.txt)
3:shopt -u extglob
了解下什么是shopt
在缺省情况下，有些是打开的，有些是关闭的，shopt各选项随着bash版本的更新会有增加，与shopt相关的基本操作如下:
shopt -p 列出所有选项
shopt -s 列出所有打开的选项
shopt -s extglob 打开extglob选项
shopt -u 列出所有关闭的选项
shopt -u extglob 关闭extglob选项
rm -f !(abc.txt)
-----------------------------------------------------------------------------------------
查看进程数据:ps-ef|grep php|wc -l
ps auxf|grep php
-----------------------------------------------------------------------------------------
查看文件详细日期:ls --full-time   或 ll --full-time
-----------------------------------------------------------------------------------------
设置服务开机自动启动
在/etc/rc.d/rc.local文件中添加需要启动的服务命令
要给rc.local文件可执行的权限，否则无法开机自启(没有rc.local可参考https://wker.com/linux-rc-local/)
-----------------------------------------------------------------------------------------
Linux下---shell脚本备份mysql数据库
---------任务脚本需要具备可执行的权限
脚本内容:---PS:---执行mysqldump命令需要重根目录开始
/usr/local/mysql/bin/mysqldump -uroot -p123456 --databases it_demo>/home/backup/it_demo_$(date +%Y%m%d_%H%M%S).sql
/usr/local/mysql/bin/mysqldump -uroot -p123456 --databases it_demo | gzip>/home/backup/it_demo_$(date +%Y%m%d_%H%M%S).sql.gz
rm -f /home/backup/it_demo_$(date +%Y%m%d_%H%M%S).sql
/Users/wang/test/$(date +%Y%m%d_%H%M%S)
crontabl添加一条cron----一分钟执行一次
*/1 * * * * /home/backup/bkDatabaseName.sh

Example of job definition:
.---------------- minute (0 - 59)
|  .------------- hour (0 - 23)
|  |  .---------- day of month (1 - 31)
|  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
|  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
|  |  |  |  |
*  *  *  *  * user-name  command to be executed
30 12 * * *  表示每天12:30执行一次任务
*/1 * * * *  表示每分钟执行一次任务

1、每分钟执行一次            
*  *  *  *  * 
 
2、每隔一小时执行一次        
00  *  *  *  * 
or
* */1 * * *  (/表示频率)
 
3、每小时的15和30分各执行一次 
15,45 * * * * (,表示并列)
 
4、在每天上午 8- 11时中间每小时 15 ，45分各执行一次
15,45 8-11 * * * command (-表示范围)
 
5、每个星期一的上午8点到11点的第3和第15分钟执行
3,15 8-11 * * 1 command
* * 10 * * 1 command

-----------------------------------------------------------------------------------------
Windows下---批处理文件mysql数据库(.bat)---可备份多个或者单个数据库
文件内容:
@echo off  
set "Ymd=%date:~,4%%date:~5,2%%date:~8,2%"  
D:/phpStudy/PHPTutorial/MySQL/bin/mysqldump --opt -u root --password=root --databases xietong_danji > D:/mysql_backup/xietong_danji_%Ymd%.sql  
D:/phpStudy/PHPTutorial/MySQL/bin/mysqldump --opt -u root --password=root --databases xietong_pro > D:/mysql_backup/xietong_pro_%Ymd%.sql  
D:/phpStudy/PHPTutorial/MySQL/bin/mysqldump --opt -u root --password=root --databases it_demo > D:/mysql_backup/it_demo_%Ymd%.sql  
D:/phpStudy/PHPTutorial/MySQL/bin/mysqldump --opt -u root --password=root --databases zhongyuan > D:/mysql_backup/zhongyuan_%Ymd%.sql 
@echo on

将以上代码保存为mysql_backup.bat
然后使用Windows的"计划任务"定时执行该脚本即可。(例如:每天凌晨5点执行back_db.bat)
说明:此方法可以不用关闭数据库，并且可以按每一天的时间来名称备份文件。
通过%date:~5,2%来组合得出当前日期，组合的效果为yyyymmdd,date命令得到的日期格式默认为yyyy-mm-dd
(如果不是此格式可以通过pause命令来暂停命令行窗口看通过%date:~,20%得到的当前计算机日期格式)，
所以通过%date:~5,2%即可得到日期中的第五个字符开始的两个字符，例如今天为2009-02-05,通过%date:~5,2%则可以得到02。(日期的字符串的下标是从0开始的)

PS:在新建计划任务的时候，如果马上想看到效果，计划任务开始时间往前选择一天
-----------------------------------------------------------------------------------------

1.vi编辑器里面查找内容:
文章开头开始匹配:/要匹配的内容
文章结尾开始匹配:?要匹配的内容
按n匹配下一个,N匹配上一个,
nohlsearch/set nohlsearch/set noh无高亮

2.oneinstack 中重启服务使用以下命令:
systemctl restart nginx.:
systemctl restart php-fpm.:
systemctl restart mysqld.:
systemctl restart redis-server
systemctl restart iptables			//防火墙

3.查看linux版本
cat /proc/version  //inux version 3.10.0-957.27.2.el7.x86_64(表示64位系统)
uname -a
getconf LONG_BIT可直观查看linux是32位还是64位
getconf -a(查看所有配置)

lsb_release -a

查看Centos发行版本:cat /etc/redhat-release /// cat /etc/lsb-release
查看ubuntu发行版本:cat /etc/issue ///  cat etc/lsb-release

4.iptables防火墙
A、基本操作
查看防火墙状态
: iptables status  
停止防火墙
: iptables stop  
启动防火墙
: iptables start  
重启防火墙
: iptables restart  
永久关闭防火墙
chkconfig iptables off  
永久关闭后重启
chkconfig iptables on　　

B、开启某个端口，例如80端口
 vim /etc/sysconfig/iptables
# 加入如下代码
-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
保存退出后重启防火墙
: iptables restart




5.firewall防火墙
错误处理:”Failed to start firewalld.:: Unit is masked.”错误。继续找解决方法，然后输入”systemctl unmask firewalld.:”。

1、查看firewall服务状态
systemctl status firewalld

2、查看firewall的状态
firewall-cmd --state

3、开启、重启、关闭、firewalld.:服务
# 开启
: firewalld start
# 重启
: firewalld restart
# 关闭
: firewalld stop
#设置开机不启动
systemctl disable firewalld

4、查看防火墙规则
firewall-cmd --list-all 

5、查询、开放、关闭端口
# 查询端口是否开放
firewall-cmd --query-port=80/tcp
# 开放80端口
firewall-cmd --permanent --add-port=80/tcp
# 移除端口
firewall-cmd --permanent --remove-port=80/tcp
#重启防火墙(修改配置后要重启防火墙)
firewall-cmd --reload

# 参数解释
1、firwall-cmd:是Linux提供的操作firewall的一个工具；
2、--permanent:表示设置为持久；
3、--add-port:表示添加的端口；



linux下复制目录中所有文件及子目录(包括隐藏文件)
把dira目录中的所有文件(包括隐藏文件)复制到dirb中

正解:cp -a /tmp/dira/. /tmp/dirb

cp -a /data/wwwroot/jiaoxue_danji/. /home/data/jiaoxue_danji
man 一下 cp
-a ,--archive
same as -dpR

=================================

误区一:

cp -rf /tmp/dira/.* /tmp/dirb
.* 包括了所有的文件和目录，但是也把 . 和.. 这两个包括在内，所以会递归复制，父目录的所有文件。
=================================

误区二:
cp -rf `ls -A /tmp/dira | grep '^.[^.]*'` /tmp/dirb
也会出现隐藏文件的一些错误。


6.定时任务
检查是否安装了crontab
rpm -qa|grep crontab

服务的启动与关闭
systemctl start crond
systemctl stop crond
systemctl restart crond
systemctl reload crond

查看全局配置文件
ls -l /etc/ |grep -w "cron"
cron.d是系统自动定期需要做的任务
cron.daily是每天执行一次的job
cron.deny文件就是用于控制不让哪些用户使用Crontab的功能
cron.hourly是每个小时执行一次的job
cron.monthly是每月执行一次的job
cron.weekly是每个星期执行一次的job
crontab是设定定时任务执行文件

用户配置文件:
每个用户都有自己的cron配置文件,通过crontab -e 就可以编辑,一般情况下我们编辑好用户的cron配置文件保存退出后,
系统会自动就存放于/var/spool/cron/目录中,文件以用户名命名,linux的cron服务是每隔一分钟去读取一次
/var/spool/cron,/etc/crontab,/etc/cron.d下面所有的内容.

crontab文件格式(/etc/crontab)
minute: 表示分钟，可以是从0到59之间的任何整数。
hour:表示小时，可以是从0到23之间的任何整数。
day:表示日期，可以是从1到31之间的任何整数。
month:表示月份，可以是从1到12之间的任何整数。
week:表示星期几，可以是从0到7之间的任何整数，这里的0或7代表星期日。
command:要执行的命令，可以是系统命令，也可以是自己编写的脚本文件。

查看crond任务是否开机自动启动
chkconfig --list crond
设置开机自动启动
chkconfig --level 35 crond on

7.修改memcache可以远程连接vi /etc/init.d/memcached
	将OPTIONS值改为:0.0.0.0



9.
查看系统中文件的使用情况
df -h
查看当前目录下各个文件及目录占用空间大小
du -sh *

10.复制虚拟机，网卡服务重启报错
错误:Job for network.: failed because...错误
解决:修改复制出来的虚拟机HWADDR	右键虚拟机-设置-网络-高级
重启网卡服务:systemctl restart network

启动:systemctl start NetworkManger
关闭:systemctl stop NetworkManager
开机启动:systemctl enable NetworkManger
查看是否开机启动:systemctl is-enabled NetworkManager
禁用开机启动:systemctl disable NetworkManager


11.压缩文件
zip -r [filename.zip] [文件夹名]
	解压:unzip [filename.zip]

解压到指定目录
unzip -d /usr/share/elasticsearch/plugins/elasticsearch-analysis-ik-8.7.0 elasticsearch-analysis-ik-8.7.0.zip


tar 命令可以用来压缩打包单文件、多个文件、单个目录、多个目录。
常用格式:
单个文件压缩打包 tar zcvf [my.tar.gz] [file1]
多个文件压缩打包 tar zcvf my.tar.gz file1 file2,...
单个目录压缩打包 tar zcvf [my.tar.gz] [dir1]
多个目录压缩打包 tar zcvf my.tar.gz dir1 dir2
	解压:tar -zxvf my.tar.gz

gzip 命令
gzip [filename]
	解压:gzip -dv [filename.gz] 


12.批量替换
将文件tihuan(假设此文本中字符a)中的所有字符a换成字符w，其命令为:
按shift+:进入尾行模式
在:后输入    %s/a/w/g
其中s为:substitute，%表示所有行，g表示global

如果要替换34到78行之间的，则如下:
前几步同上，最后一步为:
:34，78s/a/w/

13.基本命令的使用
> cat  filename     		//在终端显示文件全部内容
> head  -n  filename  	//查看文件“前n行”内容
> tail  -n  filename  	//查看文件“末尾n行”内容
> wc -l filename      		//计算文件行数

> touch  filename   				//在当前目录下创建文件
> touch  dir/filename			//在指定目录下创建文件

14.用户和组别的管理-只有root用户具有该权限

group-组别配置文件路径名:/etc/group
查看当前系统有哪些组别可供使用
cat /etc/group

groupadd	组名		创建组
groupdel 	组名		删除组
groupmod -n	newname  oldname	修改组

用户配置文件路径名:/etc/passwd
查看当前系统有哪些用户
cat /etc/passwd
root:x:0:0:root:/root:/bin/bash
用户名:加密后的登录密码:用户编号:对应组别编号:家目录:登录系统使用的shell脚本

useradd  username                //创建用户的同时会创建“同名”组
useradd  -g  组编号   username     //创建用户的同时设置其组别(自己就不会创建同名的组别了)

usermod  -g gid(组别编号)  username   //修改组别是常见操作
usermod  -l  newname   username   	//修改用户名

userdel username     //删除用户(删除/etc/passwd文件对应信息)，此时其家目录需要手动删除
userdel -r username  //-r参数，删除用户的同时也删除其“家目录

passwd 用户名     	//root管理员给某个用户设置密码，包括重置密码
passwd				//root管理员给自己重置密码
passwd				//普通管理员给自己重置密码


15.vi编辑器的使用
进入 编辑模式:
a:	光标向后移动一位进入编辑模式
i:	光标位置 和 内容 没有变化进入编辑模式
o:	新起一行进入编辑模式
s:	删除光标所在字符进入编辑模式

尾行模式  与  命令模式 切换
进入尾行模式:
1.	:
2.	/
回到命令模式
1.	esc
2.	连续两次快速键入esc
3.	删除全部尾行内容

内容删除delete
dd      	删除光标所在行
ndd    		删除包括光标所在行的后一共 n 行内容
x       	删除光标所在的单个字符
cw     		从光标所在位置删除至单词结尾，并进入“编辑模式”

内容复制(yanked)粘贴
yy      复制光标所在行
nyy    	复制包括光标所在行的后一共 n 行内容
p       paste把复制(删除)的内容粘贴出来
    (缓冲区只保留最后一次”复制或删除”的内容供粘贴操作)
Shift+j	合并上下行内容为一行

给vi设置别名，可以自动定位到vim，以后使用vi就是间接调用vim指令
> vim /etc/bashrc
在文件最后行添加如下内容
alias vi='vim'
执行如下指令使得别名生效:
> source /etc/bashrc

---跳到文本的最后一行:按“G”,即“shift+g”
---跳到第一行的第一个字符:按两次“g”，

---跳转到当前行的第一个字符:在当前行按“0”。
---跳转到当前行的最后一个字符:在当前行按“$”键。
---快速定位到第40行: 40 + shift + g (先输入行号,然后使用快捷键)

替换目标字符(将abc全部替换为deg)
:1,$s/abc/deg

16.权限设置
文件对权限的使用
读:	是否可以查看文件内容
写:	是否可以修改该文件(可以:w!或:wq!强制写操作)
执行:	文件是否可以运行

目录对权限的使用
读:	是否可以查看该目录内部的文件信息
写:	是否可以给该目录创建、修改、删除文件
执行:	指定用户是否可以cd进入该目录


文件权限设置

A:字母相对方式
权限: r读(read)       w写(write)       x执行(execute)
身份: u主人(user)     g同组(group)     o其他组(other)
规则:
1)	不同身份通过",逗号"分隔
2)	+:增加，-:去除，在同一个身份里边，每次只能用“一个”
3)	"rwx"在同一个身份里边一次可以设置一个或多个，chmod  u+rw,g-x  filename
4)	"ugo" 每次权限操作可以设置一个或多个身份

示例操作:
>chmod u+rw  filename        //主人增加读、写权限
>chmod g-rx  filename        //同组身份删除读、执行权限
>chmod u-w,g+x filename      //主人删除写，同组增加执行
>chmod o+w,o-x  filename     //其他组用户“增加写、删除执行”
>chmod u+r,g-wx,o+rx  filename   //主人增加读，同组去除写、执行，其他组增加读、执行权限


B:数字绝对方式
读:4      写:2      执行:1
>chmod 764  filename   //主人读、写、执行，  同组读、写，    其他读
>chmod 777  filename   //满贯权限
>chmod 000  filename   //所有用户没有任何权限
>chmod 513  filename   //主人读、执行，同组执行，其他组写、执行
>chmod  -R  777  dirname           //递归方式设置目录和内部文件拥有相同的权限




文件主人、组别设置
chown  主人  filename					//设置主人
chown  主人.组别  filename    		//主人和组别同时设置
 			//主人和组别不见得是匹配的
chown  .组别  filename				//设置组别
chown  -R  主人.组别  dirname     	//递归方式设置目录的属组


17.管道的使用
Linux的管道其实与Smarty中变量修饰器的作用完全一样，就是把前者的输出结果放到缓冲区里边，再通过其他指令做二次、三次……处理的过程。
> grep sbin passwd2  |  wc     //计算passwd2文件中出现sbin内容的行一共有多少个
> ls  -l  |  head  -5 				//查看当前目录下的前5个文件
> ls  -l  |  head  -10  |  tail  -5 //查看当前目录下第6-10个文件
> ls  -l  |  grep  名字				//查看当前目录文件信息中是否有指定关键字出现
> ls -l | wc      					//计算当前目录下文件的总数目(需要减去1)
> find / -name passwd | wc    		//查看系统中存在多少个名称为passwd的文件

18.软连接,硬链接
软连接
软链接可以看作是windows系统的快捷方式，可以让你快速连接到目标文件或目录
有一个文件，需要频繁在不同的地方被访问到，那么就在被访问的地方给这个文件设置一个“软链接”
linux系统软链接效果:
软链接前边有l标志

设置软连接
> ln  -s   源文件    软链接
> ln -s /home/apple.txt /var/orange.txt

①设置软链接时候，软链接文件和源文件最好都通过绝对路径方式设置
②普通文件和目录都可以设置软链接
③源文件 被删除，对应的软链接就变为“无效链接”，如果再创建一个同名源文件，软链接又恢复为有效链接文件。
④软链接本身是一个物理文件，内部存储着源文件的访问路径名

硬链接
一个文件本身有两部分组成:名称 和 实体，通常我们看到的都是文件名称，实体隐藏在后边，
通常不可以直接看到，而且文件实体由于业务的需要可以设置多个名称，这些名称被称为文件的“硬链接”。
多个名称与文件实体是通过共同的“索引号码”关联的

设置硬连接
ln  [-d]  源文件   硬链接文件

目录的硬链接
目录不可以自定义创建硬链接，但是本身存在硬链接。

问:为什么目录的硬链接数目是从2开始的，并且还会自动累加？
答:一个目标目录被创建好，该目录的硬链接数目是2个，本身名字是一个，
目录内部的隐藏目录.点是第2个，
后期给该目标目录再增加子级目录，那么目标目录本身的硬链接数目就会增1个，
因为新增加的目录内部还有..点点，该..点点也是目标目录的硬链接

硬链接使用注意
①创建硬链接的时候，设置 源文件 参数 没有必要通过绝对路径方式，能找到即可
②只有普通文件可以设置硬链接，目录不可以
③同一个源文件的所有硬链接，必须存在于 同一个硬盘、同一个分区里边

软链接是快捷方式，可以对目标文件进行指引，目标文件再联系到文件实体
硬链接就是文件的名字，每个硬链接都与实体文件有直接联系。


19.光驱挂载
具体挂载操作:
mount  硬件   挂载点目录(普通目录)   //挂载动作
mount  /dev/cdrom  /home/rom   	//把光驱挂载到/home/rom目录

卸载:
umount  /dev/cdrom        		//(硬件)卸载光驱
umount  /home/rom   			//(挂载点)卸载光驱


20.软件的安装

二进制安装:rpm
rpm  -ivh  软件包全名      	//安装软件
rpm  -q   软件包名(完整)   	//query查看软件是否有安装
rpm  -e   软件包名(完整)      //卸载软件
rpm  -qa   					//query all  查看系统里边全部rpm方式安装的软件
rpm  -qa  |  grep lrz(部分名字)			//模糊查找指定软件ftpd是否有安装
rpm  -ql  软件包名(完整)		//查看软件的安装位置


Yum(全称为 Yellow dog Updater, Modified)是一个在Fedora和RedHat以及SUSE中的Shell前端软件包管理器。基于RPM包管理
yum -y install 软件包名[完整]			//安装软件 -y:避免不必要的提示,install:安装软件
yum -y remove 软件包名[完整]			//卸载软件 -y:避免不必要的提示,remove:卸载软件
yum list installed				//显示所有已经安装和可以安装的软件包列表
yum list installed | grep 部分名称	//管道方式模糊查询已经安装的相关软件

删除软件
可以单独卸载，那么先卸载gcc-c++，再卸载libstdc++-devel
yum -y remove gcc-c++
yum -y remove libstdc++-devel
一并卸载，卸载libstdc++-devel的同时会检测出有gcc-c++的依赖关系然后一并卸载
yum -y remove libstdc++-devel

apt-get install ssh
apt-get install net-tools
netstat和ifconfig命令在安装了net-tools后都可以使用了

源码编译方式安装
把从网络上下载下来(获取其他途径获取)的源码软件文件通过工具编译为二进制码文件，
再安装到系统里边，这就是源码编译方式安装软件，较比二进制码软件安装多了一个编译的步骤

1) 给软件做配置
 ./configure         
	在解压软件目录内部执行
	做软件参数配置，例如软件的安装位置、软件依赖、软件依赖检查等
	例如
	 ./configure --prefix=xxx是设置软件的安装位置(大部分软件都有此参数)
	 ./configure --help 查看软件可供使用的参数
	
	该configure指令文件是被软件的组成部分，不是必须的，有的软件根据实际需要可能并没有设置该文件，
	执行完毕会把配置信息写入到同级目录的Makefile配置文件中，如果这个指令执行有错误，请修改再重复执行即可，之前写入的错误信息就会被覆盖掉

注意:
① 每个软件的configure配置参数都是不一样的，并且只需设置必要的参数即可
② 该configure是软件本身的可执行程序文件，执行时需要设置./斜杠
③ 并不是每个软件都有configure指令文件的

2) 编译
># make               
	根据Makefile的配置信息把软件源码编译生成“二进制码”文件内容
	注意:该make是系统指令(/usr/bin/make),可以直接执行

3) 安装软件
># make  install        
	把make生成的二进制文件(也会有源文件)复制到系统指定目录里边(本质与rpm软件安装过程一致)

软件安装错误、需要重新安装
1)  已经执行configure操作
》根据正确的参数重新configure向下进行即可
2)	已经执行configure、make操作
	》删除解压后的文件目录，重新解压、configure、make、make install即可
	
3) 已经执行configure、make、make install
①	找到软件的安装目录并删除之(有指定安装目录情况--prefix)
②	删除软件解压后的目录
③	重新解压、重新configure、重新make、重新make install

二进制码软件安装和源码编译安装取舍:
1) 如果对软件没有特殊需求，默认配置就可以满足，使用二进制方式安装
2) 如果对软件的各个配置有灵活的需求，默认不满足，使用源码编译方式安装


远程下载:wget http://*********


21.查看某文件夹下文件的个数
/home目录下文件情况(示例):
-rw-r--r--   1 root root   14035 6月   3 11:39 apple.txt(-开始的标识文件)
drwxr-xr-x   2 root root      31 7月  30 13:06 backup(d开始的标识目录)



ls -l |grep "^-"|wc -l
说明:
ls -l
长列表输出该目录下文件信息(注意这里的文件，不同于一般的文件，可能是目录、链接、设备文件等)
grep "^-"
这里将长列表输出信息过滤一部分(正则匹配)，只保留一般文件，如果只保留目录就是 ^d
wc -l
统计输出信息的行数，因为已经过滤得只剩一般文件了，所以统计结果就是一般文件信息的行数，又由于
一行信息对应一个文件，所以也就是文件的个数。


查看某文件夹下 文件 的个数:
ls -l |grep "^-"|wc -l  

查看某文件夹下 文件夹 的个数:
ls -l |grep "^d"|wc -l  

查看某文件夹下 文件 的个数，包括子文件夹里的。
ls -lR|grep "^-"|wc -l

查看某文件夹下 文件夹 的个数，包括子文件夹里的。
ls -lR|grep "^d"|wc -l

22.which 和 whereis的区别
which:搜索二进制命令路径
whereis:搜索二进制命令路径，以及其帮助文档路径


23.计算一个文件中的空行数文:https://www.cnblogs.com/quanyao/p/13599186.html
文件redis.conf
总行数:wc -l redis.conf
空行数:grep -E "^$" redis.conf |wc -l
注释行数:grep -E "^#" redis.conf |wc -l
有效内容行数:grep -E "^[a-z]" redis.conf |wc -l


----------------------------------------------------------------------------------
centos设置静态IP
vim ifcfg-ens33         
做以下操作:
修改:BOOTPROTO=static
ONBOOT=yes
增加:
IPADDR=192.168.110.155
GATEWAY=192.168.110.2  -- 网关(虚拟机中的net)
DNS1=192.168.110.2   --与网关一致

ubuntu
以root身份设置ip
vi /et/network/interfaces
auto ens33
iface ens33 inet static
address 192.168.255.199
netmak 255.255.255.0
gateway 192.168.255.2

开启dns
vi /etc/systemd/resoveld.conf
[Resolve]
DNS=8.8.8.8 114.114.114.114

重启网络
/etc/init.d/netowrking restart


安装软件
apt-get install -y 软件包名
1.缺少ps命令
apt-get install procps
2.缺少pstree命令
apt-get install psmisc


Ubuntu防火墙设置:
systemctl ufw status命令查看当前防火墙状态;inactive状态是防火墙关闭状态 active是开启状态。
systemctl ufw enable命令来启动防火墙
systemctl ufw disable命令来启动防火墙

查看ubuntu发行版本:lsb_release -a

----------------------------------------------------------------------------------




1.lsblk 　　　　          查看分区和磁盘
2.df -h 　　             查看空间使用情况
3.fdisk -l 　　          分区工具查看分区信息
4.cfdisk /dev/sda  　　  查看分区
5.blkid 　               查看硬盘label(别名)
6.du -sh * 　　          统计当前目录各文件夹大小
7.free -h 　             查看内存大小
8.cat /proc/cpuinfo| grep "cpu cores"| uniq  　　查看cpu核心数
 

awk相关命令:(https://www.cnblogs.com/datang6777/p/7003319.html)
查看日志中访问次数最多的前10个IP
#cat access.log |cut -d ' ' -f 1 |sort |uniq -c | sort -r | awk '{print $0 }' | head -n 10
#cat access.log |cut -d ' ' -f 1 |sort |uniq -c | sort -r | head -n 10
cat access.log | awk '{print $1 }' | sort | uniq -c | sort -r | head -n 10

awk '{print $1 }' :取每行第一个字段
sort :取每行第一个字段ascii码排序
uniq -c :去重统计(输出第一个字段的统计数和 统计字段两项信息)
sort -r:记过倒序


cut cut -d ' ' -f 1:-d ' '是以空格为截取标志，-f 1取第一个字段
         cut 命令用于显示每行从开头算起 num1 到 num2 的文字。
         cut 命令从文件的每一行剪切字节、字符和字段并将这些字节、字符和字段写至标准输出。
         如果不指定 File 参数，cut 命令将读取标准输入。必须指定 -b、-c 或 -f 标志之一。
         参数:
         -b :以字节为单位进行分割。这些字节位置将忽略多字节字符边界，除非也指定了 -n 标志。
         -c :以字符为单位进行分割。
         -d :自定义分隔符，默认为制表符。
         -f :与-d一起使用，指定显示哪个区域。

sort :结果排序
          sort 命令将以默认的方式将文本文件的第一列以 ASCII 码的次序排列，并将结果输出到标准输出。

uniq -c: 可检查文本文件中重复出现的行列。(会将结果集去重(只显示一行)，并且以 :统计数 统计字段显示 )
          -c 在每列旁边显示该行重复出现的次数。

sort -r :结果反序排列
          -r:以相反的顺序来排序
          sort 命令将以默认的方式将文本文件的第一列以 ASCII 码的次序排列，并将结果输出到标准输出。

(实测cut命令和awk命令用一个就行)
awk '{print $0 }':日志行
                  $n	当前记录(日志行)的第n个字段，字段间由FS分隔(默认是任何空格)
                  $0	完整的输入记录(日志行)
head -n 10:结果中的前十个



查看日志中出现100次以上的IP
cat access.log |awk '{print $1}'|sort |uniq -c |awk '{if ($1 > 100) print $0}'|sort -r


列出传输时间超过 30 秒的文件
cat access.log|awk '($NF > 30){print $7}' |sort -n|uniq -c|sort -nr|head -20


列出最最耗时的页面(超过60秒的)
cat access_log |awk '($NF > 60 && $7~/\.PHP/){print $7}' |sort -n|uniq -c|sort -nr|head -100


查看端口号使用
sudo lsof -i tcp:8080
通过进程名显示进程树:
pstree -s 进程名称
通过进程ID显示进程树，父进程和子进程都会显示:
pstree -p 进程id
通过进程ID显示，但只显示它和子进程:
pstree 进程id

ps -efww|grep php |cut -c 7-15|xargs kill -9
ps -efww|grep hyperf |cut -c 7-15|xargs kill -9
ps -efww|grep vim |grep -v grep|cut -c 9-15|xargs kill -9
“ps　-efww”是查看所有进程的命令。这时检索出的进程将作为下一条命令“grep“的输入，注意要结束其它程序时，请将上面命令中的vim替换成其它程序名。
“grep -v grep”是在列出的进程中去除含有关键字“grep”的进程。
“cut -c 9-15”是截取输入行的第9个字符到第15个字符，而这正好是进程号PID。
“xargs kill -9”中的xargs命令是用来把前面命令的输出结果(PID)作为“kill -9”命令的参数，并执行该命令。
“kill -9”会强行杀掉指定进程，这样就成功清除了同名进程。


----------------------------------------------------------------------------------




