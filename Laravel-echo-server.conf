<?php
如果是阿里云服务器，首先在线上安全组开放6001端口

参考网址：
https://learnku.com/laravel/t/13101/using-laravel-echo-server-to-build-real-time-applications
https://learnku.com/articles/5121/a-small-demo-based-on-laravelvueredis-real-time-chat

PS:
laravel项目中安装前端扩展功能包
	Windows: npm install 
	Linux:   npm install --unsafe-perm
	npm run dev（如果终止了npm run dev命令的运行，之后修改了JS、CSS文件，都需要重新运行该命令生成对应的JS/CSS）



服务端：laravel-echo-server
全局安装laravel-echo-server： npm install laravel-echo-server -g;
控制台进入laravel项目，运行命令：laravel-echo-server init

1.laravel-echo-server.json
{
    "authHost": "http://ws.php68.com",
	"authEndpoint": "/broadcasting/auth",
	"clients": [],
	"database": "redis",
	"databaseConfig": {d
    "redis": {
	    	"host": "127.0.0.1",
			"port": "6379",
			"password": "football"
    },
		"sqlite": {
        "databasePath": "/database/laravel-echo-server.sqlite"
		}
	},
	"devMode": false,
	"host": null,
	"port": "6001",
	"protocol": "http",
	"socketio": {},
	"secureOptions": 67108864,
	"sslCertPath": "",
	"sslKeyPath": "",
	"sslCertChainPath": "",
	"sslPassphrase": "",
	"subscribers": {
    "http": true,
		"redis": true
	},
	"apiOriginAllow": {
    "allowCors": false,
		"allowOrigin": "",
		"allowMethods": "",
		"allowHeaders": ""
	}
}

2.composer require predis/predis

准备好后端配置后，我们开始安装前端插件，毕竟 Laravel Echo 是前端工具。
安装socket客户端和laravel-echo
npm install --save socket.io-client
npm install --save laravel-echo
npm run dev

1.bootstrap.js
import Echo from 'laravel-echo'

window.Echo = new Echo({
    broadcaster: 'socket.io',
    host: window.location.hostname + ':6001'
});

2.app.blade.php文件引入以下三个文件
<script src="http://ws.php68.com:6001/socket.io/socket.io.js"></script>
<link href="{{ asset('css/app.css') }}" rel="stylesheet">
<script src="{{ asset('js/app.js') }}"></script>

3.如果redis有认证，在.env配置添加如下类容
LARAVEL_ECHO_SERVER_REDIS_HOST=127.0.0.1---主机IP
LARAVEL_ECHO_SERVER_REDIS_PORT=6379-------redis端口号
LARAVEL_ECHO_SERVER_REDIS_PASSWORD=123456----redis密码

4.配置完成后，在项目更目录下启动服务： laravel-echo-server start

-----------------------------------------------------------------------------------------------------
HTTPS配置
cp /usr/local/nginx/cert/ws/3191240_ws.php68.com.pem /usr/local/nginx/cert/ws/3191240_ws.php68.com.crt
1.服务端web服务器配置https
2.<script src="http://ws.php68.com:6001/socket.io/socket.io.js"></script>
{
	"authHost": "https://ws.php68.com",
	"authEndpoint": "/broadcasting/auth",
	"clients": [],
	"database": "redis",
	"databaseConfig": {
		"redis": {
			"host": "127.0.0.1",
			"port": "6379",
			"password": "football"
		},
		"sqlite": {
			"databasePath": "/database/laravel-echo-server.sqlite"
		}
	},
	"devMode": false,
	"host": null,
	"port": "6001",
	"protocol": "https",
	"socketio": {},
	"secureOptions": 67108864,
	"sslCertPath": "/usr/local/nginx/cert/ws/3191240_ws.php68.com.crt",
	"sslKeyPath": "/usr/local/nginx/cert/ws/3191240_ws.php68.com.key",
	"sslCertChainPath": "",
	"sslPassphrase": "",
	"subscribers": {
		"https": true,
		"redis": true
	},
	"apiOriginAllow": {
		"allowCors": false,
		"allowOrigin": "",
		"allowMethods": "",
		"allowHeaders": ""
	}
}

配置完成后，在项目根
目录下启动服务： laravel-echo-server start
