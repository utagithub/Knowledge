<?php
正则表达式：
php中定义正则表达式的核心与javascript完全一致，应用语法不同而已

1.1 定义字符集组成
[a-e]		表示a到e这些字母中的某一个字母 [c-f] [a-z]
[aeiou]		表示aeiou这5个字符其中的某一个字符
[a-zA-Z]	表示大写、小写字母中的某一个字符 [a-zA-Z0-9]  [a-zA-Z0-9_-]
[0-9]		表示0到9之间任意一个数字  [1-9]  [5-7]
[a-z0-9]	表示a到z之间、0到9之间任意一个数字

注意：通过“-横线”限定范围的时候，必须是由小到大设置
像 [z-h]  [8-3]  等都是(语法)错误的


1.2 特别字符组成
+	其前面那个单元出现1次或以上
*	其前面那个单元出现0次或以上（任意次数）
?	其前面那个单元出现0次或1次
$	匹配输入字符串的结尾位置
^	(托字符)	表示字符串的开始位置
.	点	匹配除换行符 \n之外的任何单字符
\	这个符号是用来转义的，去除符号的特殊意思，保留最本质意思
| 	(或)	指明两项之间的一个选择


1.3 等价字符

\d	表示匹配一个数字[0-9]
\D	表示一个非数字[^0-9]
\w	表示大小写字母、数字、下划线其中一个[a-zA-Z0-9_]
\W	表示非大小写字母、数字、下划线
\s	表示空格
\S	表示非空格



1.4 限制字符

{m}	其前一单元严格出现m次
{m,}	其前一单元出现至少m次，至多不限制
{m,n} 	其前一单元出现至少m，至多n次
[^lsjd]	不是中括号中的任意一个字符
[^a-f]	不是中括号中中杠的两端字符范围



使用
1.定义正则
$reg = "/正则内容/";
2.正则匹配
preg_match($reg,被匹配内容,$result);    	//单次匹配
preg_match_all($reg,被匹配内容,$result);	//全局匹配



正则中--不带--括号的情况()：
示例：1
$str='2018-09-04';
$reg="/\d+/";
preg_match($reg, $str,$result);
preg_match_all($reg, $str,$result00);

echo "<pre>";
print_r($result);
/*Array
(
    [0] => 2018
)*/
print_r($result00);
/*Array
(
    [0] => Array
        (
            [0] => 2018
            [1] => 09
            [2] => 04
        )

)*/


示例：2
$str1='2018-09-04';
$reg1="/\d+-\d+-\d+/";
preg_match($reg1, $str1,$result1);
preg_match_all($reg1, $str1,$result11);
print_r($result1);
/*Array
(
    [0] => 2018-09-04
)*/

print_r($result11);
/*Array
(
    [0] => Array
        (
            [0] => 2018-09-04
        )

)*/

正则中--带--括号的情况()----会根据括号中正则，单独匹配出括号中的内容：
示例：3
$str2='2018-09-04';
$reg2="/\d+-(\d+)-\d+/";
preg_match($reg2, $str2,$result2);
preg_match_all($reg2, $str2,$result22);
print_r($result2);
/*Array
(
    [0] => 2018-09-04
    [1] => 09
)*/

print_r($result22);
/*Array
(
    [0] => Array
        (
            [0] => 2018-09-04
        )

    [1] => Array
        (
            [0] => 09
        )

)*/
