Apache配置https

1.httpd.conf加载以下模块
LoadModule ssl_module lib/httpd/modules/mod_ssl.so
LoadModule socache_shmcb_module lib/httpd/modules/mod_socache_shmcb.so

2.引入https配置文件
Include /opt/homebrew/etc/httpd/extra/httpd-ssl.conf

3.httpd-ssl.conf文件站点配置
Listen 443
SSLCipherSuite HIGH:MEDIUM:!MD5:!RC4:!3DES
SSLProxyCipherSuite HIGH:MEDIUM:!MD5:!RC4:!3DES
SSLHonorCipherOrder on
SSLProtocol all -SSLv3
SSLProxyProtocol all -SSLv3
SSLPassPhraseDialog  builtin
SSLSessionCache        "shmcb:/opt/homebrew/var/run/httpd/ssl_scache(512000)"
SSLSessionCacheTimeout  300

<VirtualHost _default_:443>
        DocumentRoot "/opt/homebrew/var/www/web_wang/web_mrwang/public"
        ServerName php68.com
        #ServerAdmin you@example.com

        <Directory "/opt/homebrew/var/www/web_wang/web_mrwang/public" >
                Options Indexes FollowSymLinks ExecCGI
                DirectoryIndex index.html index.htm index.php
                AllowOverride All
                Require all granted
        </Directory>

        ErrorLog "/opt/homebrew/var/log/httpd/error_log"
        TransferLog "/opt/homebrew/var/log/httpd/access_log"

        SSLEngine on
        SSLCertificateFile "/opt/homebrew/etc/httpd/cert/php68.com_public.crt"
        SSLCertificateKeyFile "/opt/homebrew/etc/httpd/cert/php68.com.key"
        SSLCertificateChainFile "/opt/homebrew/etc/httpd/cert/php68.com_chain.crt"

        <FilesMatch "\.(cgi|shtml|phtml|php)$">
                SSLOptions +StdEnvVars
        </FilesMatch>

        <Directory "/opt/homebrew/var/www/cgi-bin">
                SSLOptions +StdEnvVars
        </Directory>


BrowserMatch "MSIE [2-5]" \
         nokeepalive ssl-unclean-shutdown \
         downgrade-1.0 force-response-1.0
CustomLog "/opt/homebrew/var/log/httpd/ssl_request_log" \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
</VirtualHost>

4.http跳转https
(apache本地环境不建议使用,本店可能有多个虚拟域名,实测非目标站点域名也会跳转到目标站点域名)
自动跳转仅在httpd-vhosts.conf无站点的情况下
httpd.conf文件添加以下内容
RewriteEngine on
RewriteCond %{SERVER_PORT} !^443$
RewriteRule ^(.*)$ https://%{SERVER_NAME}$1 [L,R]


站点导航：
引入httpd-vhosts.conf后，http.conf默认站点失效,为方便使用添加以下站点代替使用

http://127.0.0.1/
http://localhost
http://【所有虚拟域名】
<VirtualHost *:80>
    DocumentRoot "/opt/homebrew/var/www/web_wang/test"
    ServerName localhost
    <Directory "/opt/homebrew/var/www/web_wang/test" >
        Options Indexes FollowSymLinks ExecCGI
        DirectoryIndex index.html index.htm index.php
        AllowOverride All
        #Order allow,deny
        Require all granted
    </Directory>
</VirtualHost>



https://127.0.0.1
https://localhost
https://【所有虚拟域名】


********************************************************************************************************************
nginx:
server {
        #HTTPS的默认访问端口443。
        #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。
        listen 443 ssl;

        #填写证书绑定的域名
        server_name php68.com;

        #填写证书文件名称
        ssl_certificate cert/php68.com.pem;
        #填写证书私钥文件名称
        ssl_certificate_key cert/php68.com.key;

        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;

         #默认加密套件
        ssl_ciphers HIGH:!aNULL:!MD5;

        #自定义设置使用的TLS协议的类型以及加密套件（以下为配置示例，请您自行评估是否需要配置）
        #TLS协议版本越高，HTTPS通信的安全性越高，但是相较于低版本TLS协议，高版本TLS协议对浏览器的兼容性较差。
        #ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        #ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;

        #表示优先使用服务端加密套件。默认开启
        ssl_prefer_server_ciphers on;

        #listen       80;
        #server_name  php68.com;
        root   html/web_wang/web_mrwang/public;


        location / {
            index index.php  index.html index.htm;
            if (!-e $request_filename) {
               rewrite ^(.*)$ /index.php/$1 last;
            }
        }
        location ~ \.php(.*)$ {
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_split_path_info ^((?U).+\.php)(/?.+)$;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            fastcgi_param  PATH_INFO  $fastcgi_path_info;
            fastcgi_param  SCRIPT_TRANSLATED  $document_root$fastcgi_path_info;
            include        fastcgi_params;
        }

}
server {

        listen       80;
        server_name  php68.com;
        root   html/web_wang/web_mrwang/public;

        #将所有HTTP请求通过rewrite指令重定向到HTTPS。
        rewrite ^(.*)$ https://$host$1;

        location / {
                index index.html index.htm;
        }

}
