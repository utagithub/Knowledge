<?php

获取Memcache对象
function get_memcache_obj(){
    $memcache=new \Memcache();
    $memcache->addServer('101.200.34.217',11211);
    return $memcache;
}


1.linux修改memcache可以远程连接vi /etc/init.d/memcached


2 分布式部署：
分布式：把原先一台memcache服务器做的工作，现在分摊给多台memcache。
这样会降低每个memcache服务器的的工作量。
例如：我们要存储100w个key，如果只有一台memcache，那么其就要承担全部的任务，如果有5个服务器，则每个服务器存储20w的可以，减轻了每台服务器的负载，提高了系统的整体性能。

memcache分布式集群具体实现类型：
① 在一个服务器里边，开启多个memcache服务
② 购置多个服务器，每个服务器里边安装一个memcache服务

2.1 同一台服务器开启多个服务
memcached -d -u root -p 11211
memcached -d -u root -p 11212
memcached -d -u root -p 11213
memcached -d -u root -p 11214
memcached -d -u root -p 11215

memcache本身有算法，可以保证数据“平均”地存储在不同的服务器里边，
另外，php还像之前一样对memcache进行操作，不需要关心哪个key去哪个服务器操作，
在php的世界里memcache只有一个，而memcache本身有不同服务器的划分。

2.2 多服务器
$as = [
        ['192.168.139.200',11211],
        ['192.168.139.200',11212],
        ['192.168.139.200',11213],
		['192.168.139.200',11214],
		['192.168.139.200',11215],
];
$m -> addServers($as);
注意：memcache集群使用的时候，key的设置和获取，他们的服务器顺序必须严格一致，否则数据的使用有错误。

设置key:（这些key会被随机存储到不同的服务器中）
$m->set('name','xiaoming');
$m->set('age','12');
$m->set('address','beijing');
$m->set('sex','man');

获取key:
var_dump($m->get('name'));
var_dump($m->get('age'));
var_dump($m->get('address'));
var_dump($m->get('sex'));


3 LRU缓存失效
缓存空间耗尽 ，如果存储的数据超过memcache最大的存储限制(默认是64M)，此时还继续存入数据，则会把最近不常使用的key就删除了。
该机制名称为LRU(least recently use)优先删除最近很少使用的key，为存储新key腾空间
