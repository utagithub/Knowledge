<?php
每秒查询率 qps
因特网上，经常用每秒查询率来衡量域名系统服务器的机器的性能，其即为QPS。
对应fetches/sec，即每秒的响应请求数，也即是最大吞吐能力。
计算关系:
QPS = 并发量 / 平均响应时间
并发量 = QPS * 平均响应时间
通常QPS用来表达和衡量当前系统的负载，也可以用RPS来表示，
我们形容当前系统的运行状态时可以说当前QPS已经达到多少多少了，
在系统环境不变的情况下存在支持的最大QPS，但并不应该用来形容机器的性能。
可以通过提高TPS来提升当前系统的处理能力，来增加最大QPS的支持。
TPS用来形容机器的性能。

ab -n 5000 -c 200 http://localhost/
ab -n 5000 -c 100 http://0.0.0.0:9501/

ab常用参数的介绍:

-n :总共的请求执行数，缺省是1；
-c: 并发数，缺省是1；
-t:测试所进行的总时间，秒为单位，缺省50000s
-p:POST时的数据文件
-w: 以HTML表的格式输出结果

ab 的用法是:ab [options] [http://]hostname[:port]/path
直接访问网站根目录:ab -n 5000 -c 200 http://www.demo.com/

例1:ab -n 5000 -c 200 http://localhost/index.php
上例表示总共访问http://localhost/index.php这个脚本5000次，200并发同时执行。

例2:ab -n 1000 -c 100 -w http://localhost/index.php >>d:miss.html
上面的测试用例表示100并发的情况下，共测试访问index.php脚本1000次，并将测试结果保存到d:miss.html文件中

ab -n 5000 -c 200 http://192.168.199.234:18880/phpinfo.php
ab -n 5000 -c 200 http://192.168.199.234:31090/phpinfo.php

ab -n 100 -c 20 http://192.168.199.234:18880/phpinfo.php
ab -n 100 -c 20 http://192.168.199.234:31090/phpinfo.php

配置httpd.conf
1.修改默认索引文件
没有此设置，项目又肯访问会出现forbidden错误
<IfModule dir_module>
    DirectoryIndex index.html index.php
</IfModule>

2.添加AddType application/x-httpd-php .php
使得apache解析php文件可以找到php模块(必须)

3.加载以下模块
LoadModule php7_module /opt/homebrew/opt/php@7.2/lib/httpd/modules/libphp7.so
#LoadModule php8_module /opt/homebrew/opt/php@8.0/lib/httpd/modules/libphp.so
LoadModule ssl_module lib/httpd/modules/mod_ssl.so
LoadModule socache_shmcb_module lib/httpd/modules/mod_socache_shmcb.so

*********************************************************************************
查看apache工作模式
httpd -V | grep MPM

工作模式解析参考(https://blog.51cto.com/u_5112239/5656911)

httpd.conf引入httpd-mpm.conf,配置apache在某种工作模式下的进程相关配置
例：
<IfModule mpm_prefork_module>
  StartServers 5  #启动apache时启动的httpd进程个数。 
  MinSpareServers 5 #服务器保持的最小空闲进程数。 
  MaxSpareServers 10 #服务器保持的最大空闲进程数。 
  MaxClients 150 #最大并发连接数。 
  MaxRequestsPerChild 1000 #每个子进程被请求服务多少次后被kill掉。0表示不限制，推荐设置为1000。 
</IfModule>

*********************************************************************************


apache虚拟主机
<VirtualHost *:80>
    DocumentRoot "/var/www/php68/public"
    ServerName line.php68.com
<Directory "/var/www/php68/public" >
Options FollowSymLinks ExecCGI
  AllowOverride All
#  Order allow,deny
#  Allow from all
  Require all granted
    </Directory>
</VirtualHost>
说明:
DocumentRoot:网站运行目录
ServerName:网站域名
Options指令:
	FollowSymLinks:	服务器允许在此目录中使用符号链接(软链接)
	ExecCGI: execute common gateway interface(通用网关接口/协议) 允许在该目录下执行CGI脚本(php程序文件)
AllowOverride All: 	允许域名重写规则生效，例如隐藏index.php文件
Order allow,deny: 	设置目录或文件允许、禁止的访问顺序
Allow from all: 		允许全部用户访问该目录
可以通过客户端用户的ip、域名、请求方式等进行文件的限制访问

Require all granted: 从apache2.4版本开始 Allow from all 改为Require all granted了，表示允许全部用户访问该目录
Apache2.2版本	           	Apache2.4版本
Allow from all	           	Require all granted
Deny from all				Require all denied
Allow from 219.204.253.8	Require ip 219.204.253.8
Allow from ip1 ip2			Require ip ip1  ip2
Deny from 219.204.253.8		Require not ip 219.204.253.8
Deny from ip1 ip2			Require not ip ip1 ip2


*********************************************************************************

