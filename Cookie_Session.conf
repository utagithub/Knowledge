<?php
cookie 和session 的区别：
1、cookie数据存放在客户的浏览器上，session数据放在服务器上。
2、cookie不是很安全，别人可以分析存放在本地的COOKIE并进行COOKIE欺骗，考虑到安全应当使用session。
3、session会在一定时间内保存在服务器上。当访问增多，会比较占用你服务器的性能，考虑到减轻服务器性能方面，应当使用COOKIE。
4、单个cookie保存的数据不能超过4K，很多浏览器都限制一个站点最多保存20个cookie。
cookie 和session 的联系：
session是通过cookie来工作的
sessin_start();的时候会设置一个名为PHPSESSID的cookie项，名字：PHPSESSID，值：类似phr58gk7enkr9mv9v055mofb20，
该cookie的值是存储session的文件名。
session和cookie之间是通过$_COOKIE['PHPSESSID']来联系的，通过$_COOKIE['PHPSESSID']可以知道session的id(session文件名)，从而获取到其他的信息。


SESSION会话可以在服务器中配置实现默认开启（session.auto_start = 1，鉴于很多场合不使用SESSION，因此不推荐此方法）
推荐使用session_start()在当前的脚本中开启
注意：session_start()之前不能有任何输出内容，本身也需要通过HTTP协议响应头实现数据处理。
session_start()的作用
检查是否有浏览器对应的SESSION文件。不存在时，按照浏览器信息以及时间信息，
自动生成一个唯一的字符串，使用该字符串作为名称创建session文件。存在则直接读取SESSION数据到$_SESSION数组中。



SESSION的垃圾回收机制
1.	垃圾回收机制介绍
	垃圾回收机制GC（garbage collection ）是一种动态存储分配方案。它会自动释放程序不再需要的、已分配的内存块。 
	垃圾回收机制可以让程序员不必过分关心程序内存分配，从而将更多的精力投入到业务逻辑.
2.	session垃圾回收机制
	扫描所有的Session信息，逐个判断session数据是否是垃圾数据。
1)	session.gc_maxlifetime
超过session.gc_maxlifetime，session数据会被视为垃圾。在后续的垃圾回收机制启动时，会被清除。
session.gc_maxlifetime 设置了session的最短生存时间，并不能保证超过这个时间session文件立即被清除（session GC是按照概率启动）
2)	垃圾文件的标准
当前时间  ¬¬-  session文件最后修改的时间  >   session.gc_maxlifetime（垃圾回收机制规定的最大有效期时间，默认为24分钟）
	GC机制启动时，删除对应session文件。
3.	垃圾回收机制的启动时机
	客户端发起请求时，PHP在执行session_start时，会按照一定的比例（概率）启动垃圾回收机制，来删除被设为“垃圾”SESSION数据。也就是说，只要SESSION的垃圾回收机制不启动，过期的SESSION数据仍然存在。
	大型网站，请求较多，一般设置分母较大。
session.gc_probability：分子
session.gc_divisor：分母
概率：session.gc_probability / session.gc_divisor







在购物网站中通常将用户加入购物车的商品联通session_id记录到数据库中，
当用户再次访问时，通过sessionid就可以查找到用户上次加入购物车的商品。
因为sessionid是唯一的，记录到数据库中就可以根据这个查找了。

session存储的位置：php.ini->session.save_path


// setcookie('name','laowang');
// setcookie('age',10);
// setcookie('address','beijing');
// setcookie('color','red');
// setcookie('woman','liuliu');
// setcookie('man','fanfan');
// print_r($_COOKIE);

// session_start();
// $_SESSION['age']=10;
// $_SESSION['color']=['red','black','green'];
// $_SESSION['address']=['biejing','shanghai'];
// echo $_COOKIE['PHPSESSID'];
// print_r($_SESSION['age']);