<?php
linux下安装composer;
php -v 查看确认安装了php;
1.下载安装脚本
php -r "copy('https://install.phpcomposer.com/installer', 'composer-setup.php');"
2.执行脚本
php composer-setup.php
3.删除脚本
php -r "unlink('composer-setup.php');"
4.设置全局安装
mv composer.phar /usr/local/bin/composer


windows下安装

找到并进入 PHP 的安装目录（和你在命令行中执行的 php 指令应该是同一套 PHP）。
将 composer.phar 复制到 PHP 的安装目录下面，也就是和 php.exe 在同一级目录。
在 PHP 安装目录下新建一个 composer.bat 文件，并将下列代码保存到此文件中。
复制
@php "%~dp0composer.phar" %*
最后重新打开一个命令行窗口试一试执行 composer --version 看看是否正确输出版本号。
最后
更新composer
composer selfupdate
(composer selfupdate --2)升级到2.*版本
composer降级
升级后直接执行：composer self-update --rollback to return to version 1.10.22
或者是 composer self-update --1

查看设置：composer config -l -g

镜像地址：
阿里云 Composer 镜像:https://mirrors.aliyun.com/composer/
腾讯云 Composer 镜像:https://mirrors.cloud.tencent.com/composer/
PHP 国内 Composer 镜像:https://packagist.phpcomposer.com
华为云 Composer 镜像:https://repo.huaweicloud.com/repository/php/

设置镜像:composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/



composer
新建项目:composer create-project laravel/laravel shop(项目名) 5.3.*(版本号) --prefer-dist
新建项目:composer create-project laravel/laravel larswoole 5.7.16 --prefer-dist
新建项目:composer create-project hyperf/hyperf-skeleton:2.2.4
新建项目:composer create-project hyperf/swow-skeleton:3.0.0
功能包:composer require "topthink/think-captcha:1.0.7"

composer create-project laravel/laravel xietong 5.4.* --prefer-dist
composer require "barryvdh/laravel-cors:0.8.5"
composer require "gregwar/captcha:1.1"
composer require "maatwebsite/excel:2.1.29"
composer require "intervention/image:2.4"
composer require "nesbot/carbon:1.38.2"

开发是使用的到扩展包，下载加上--dev
composer require "barryvdh/laravel-debugbar:3.2.8" --dev



composer show -i 查询安装的依赖版本
composer require "barryvdh/laravel-cors:0.11.3"
composer require "laravel/passport：4.0.0"

laravel安装扩展的集中方式
安装具体版本的包
1.composer require "扩展包名"

存在composer.lock文件时
2.composer install

存在composer.json,慎用，会更新所有扩展包到最新版本
3.composer update

composer.json：记录各个功能包模糊的版本号码等信息
composer.lock：记录各个功能包详细的版本号码等信息
给项目每“添加/去除”功能包的时候，这个两个文件会随时更新





composer remove 软件包名


composer问题处理

1.git bash 下 composer 命令无法使用的问题
已经安装 composer，写好 composer.bat，并且设置好了 path，在 cmd 下可以正常使用，但是在 git-bash 里面不行，显示如下提示：

bash: composer: command not found
复制代码
原因是：git-bash 不识别 composer.bat 文件。 解决办法：新建一个 composer 文件，内容为

#!/usr/bin/env sh

# php /path/to/composer.phar $*
php `dirname $0`/composer.phar $*

#!/usr/bin/env sh 有了这一行，git-bash 会自动识别为可执行文件。 或者直接把composer.phar复制一份，重命名为 composer。

2.报错提示： The "https://getcomposer.org/versions" file could not be downloaded: failed to open stream:

参考网站：https://blog.csdn.net/bluebird2/article/details/92874276


3.composer不知什么原因，遇到https，就会报SSL: Handshake timed out
参考网站：https://segmentfault.com/q/1010000009709439/a-1020000010075507

************************************************************************************************************************

PHP自建项目中使用composer:
1.在项目目录下新建composer.json文件
{
  "require": {
      "php": ">=7.0.0",
  }
}

2.执行composer命令，下载要安装的包
composer require elasticsearch/elasticsearch:8.7.0
composer remove elasticsearch/elasticsearch:8.7.0
执行命令后,composer.json文件内容如下,同时会生成vendor目录和composer.lock文件
{
    "require": {
        "php": ">=7.0.0",
        "elasticsearch/elasticsearch": "8.9.0"
    },
    "config": {
        "allow-plugins": {
            "php-http/discovery": false
        }
    }
}
3.vendor目录下有一个autoload.php文件,再要使用composer包的入口文件中引入该文件
例zai Answer.php中添加如下代码:
require __DIR__.'/./vendor/autoload.php';
