
如果更换网络，需要修改jenkins项目中的gitlab-IP和gitlab项目中web_hooks的IP
************************************************************************************************************************
gitlab:

docker run -itd \
--name web_gitlab \
--publish 4443:443 \
--publish 8888:80 \
--privileged \
-v /Users/wang/web_docker/gitlab/etc:/etc/gitlab:z \
-v /Users/wang/web_docker/gitlab/data:/var/opt/gitlab:z \
-v /Users/wang/web_docker/gitlab/logs:/var/log/gitlab:z \
yrzr/gitlab-ce-arm64v8:latest

旧:
进入/Users/wang/web_docker/gitlab/etc  修改gitlab.rb文件的 external_url 'http://192.168.199.234:8888'
进入/Users/wang/web_docker/gitlab/data/gitlab-rails/etc  修改gitlab.yml文件的host '192.168.199.234' port:8888

新:
external_url 'http://0.0.0.0'
  ## GitLab settings
gitlab:
  ## Web server settings (note: host is the FQDN, do not include http://)
  host: 0.0.0.0
  port: 80
  https: false

gitlab初始账号root密码修改:http://t.zoukankan.com/whcc-p-15514951.html
cat /Users/wang/web_docker/gitlab/etc/initial_root_password
root BTWnYd0m5ZvvizVXWKrnXQ137Hi4SLiV7jzKmVQRCuo=

jenkins项目devops流程中的git镜像源示例:
http://172.17.0.3/root/web_mrwang.git

内存占用高解决
https://blog.csdn.net/qq_41012810/article/details/126154052

************************************************************************************************************************
jenkins
常用插件exteded choice paramemter/git paramemter/gitlab/gitlab hook

账户密码:(/var/jenkins_home/secrets/initialAdminPassword)
admin
e7c7b3ae6e674368a778400a38095643

docker run --name web_jenkins \
-u root \
-d \
-p 8080:8080 \
-p 50000:50000 \
-v /var/run/docker.sock:/var/run/docker.sock \
-v /usr/local/bin/docker:/var/bin/docker \
-v /Users/wang/web_docker/jenkins_data:/var/jenkins_home \
--privileged=true \
jenkins/jenkins:latest

占用内存高:
https://www.bbsmax.com/A/8Bz8rBM15x/

export MAVEN_HOME=/usr/software/apache-maven-3.8.1/bin
#set oracle jdk environment
export JAVA_HOME=/usr/software/jdk1.8  ## 这里要注意目录要换成自己解压的jdk 目录
export JRE_HOME=${JAVA_HOME}/jre
export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib
#export PATH=${JAVA_HOME}/bin:${MAVEN_HOME}:${GOROOT}/bin:$PATH
export PATH=${JAVA_HOME}/bin:${MAVEN_HOME}:/usr/local/php7.2/bin:$PATH
alias ll='ls -lai -G'

************************************************************************************************************************
jenkins安装php

apt -y install gcc make g++ libtool-bin libexpat1-dev build-essential
apt install libpcre3 libpcre3-dev zlib1g zlib1g-dev openssl libssl-dev libjpeg-dev libpng-dev libfreetype-dev libxslt1.1 libxslt1-dev -y
apt install libxml2-dev libcurl4-openssl-dev -y
apt install pkgconf pkg-config -y

wget https://www.php.net/distributions/php-7.2.34.tar.gz

./configure \
--prefix=/usr/local/php7.2 \
--with-curl --with-gd \
--with-gettext --with-iconv-dir --with-kerberos \
--with-jpeg-dir \
--with-libxml-dir \
--with-mysqli --with-openssl --with-pcre-regex \
--with-pdo-mysql --with-pear --with-png-dir \
--with-xmlrpc --with-xsl --with-zlib \
--enable-bcmath --enable-libxml \
--enable-inline-optimization \
--enable-gd-native-ttf \
--enable-mbregex --enable-mbstring --enable-opcache \
--enable-pcntl --enable-shmop --enable-soap \
--enable-sockets --enable-sysvsem \
--enable-xml --enable-zip

make && make install

ln -s /usr/local/php7.2/bin/php /usr/local/bin/php

然后安装composer

************************************************************************************************************************
docker安装
https://blog.csdn.net/qq_23845083/article/details/130768859
************************************************************************************************************************
